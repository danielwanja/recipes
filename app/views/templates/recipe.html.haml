:css
  .textbox {
      height: 150px;
      width: 100%;
  }
  .strike {
    opacity:0.4;
    text-decoration: line-through;
  }

%form#recipeForm{ name: "recipeForm", "novalidate" => "true" }
  %p
    %b{ 'ng-hide' => 'editing' }
      Title: {{selectedRecipe.title}}
    .field{ 'ng-show' => 'editing', "ng-class" => "{'has-error': recipeForm.title.$invalid}"}
      %label Title
      %input#title.form-control{ "name" => "title", "ng-model" => "selectedRecipe.title", type: "text", "required" => false, "ng-minlength" => 5, "server-error" => true}
      %span.help-block{"ng-show" => "recipeForm.title.$dirty && recipeForm.title.$error.required"} Required
      %span.help-block{"ng-show" => "recipeForm.title.$dirty && recipeForm.title.$error.minlength"} At least 5 characters
      %span.help-block{"ng-show" => "recipeForm.title.$error.server"}
        {{ errors.title }}
  %p{ 'ng-hide' => 'editing' }
    %b
      Description: {{selectedRecipe.description}}
    .field{ 'ng-show' => 'editing' }
      %label Description
      %textarea#recipe_description.form-control{ "ng-model" => "selectedRecipe.description" }

  %a.btn.btn-primary{ 'ng-hide' => "editing",  'ng-click' => "edit()" } Edit

  %tabset

    %tab{heading: "Ingredients ({{selectedRecipe.ingredients.length}})"}

      %table.table.table-striped.table-bordered
        %tr
          %th Amount
          %th Description
          %th

        %tr{ 'ng-repeat' => "ingredient in selectedRecipe.ingredients", 'ng-class' => "{strike: ingredient._destroy}" }
          %td
            %span{ 'ng-hide' => 'editing' } {{ingredient.amount}} {{ingredient.unit}}
            %input{ 'ng-show' => 'editing', 'type' => "text", 'ng-model' => "ingredient.amount", 'placeholder' => "Amount" }
            %input{ 'ng-show' => 'editing', 'type' => "text", 'ng-model' => "ingredient.unit", 'placeholder' => "Unit" }
          %td
            %ng-form{ name: "ingredientForm" }
              %span{ 'ng-hide' => 'editing' } {{ingredient.description}}
              .field{ 'ng-show' => 'editing', "ng-class" => "{'has-error': ingredientForm.description.$invalid}"}
                %input{ 'name' => 'description', 'ng-show' => 'editing', 'type' => "text", 'ng-model' => "ingredient.description", 'placeholder' => "Description", 'required' => true, "ng-minlength" => 3}
                %span.help-block{"ng-show" => "ingredientForm.description.$dirty && ingredientForm.description.$error.required"} Required
                %span.help-block{"ng-show" => "ingredientForm.description.$dirty && ingredientForm.description.$error.minlength"} At least 3 characters

          %td
            %a{ 'ng-click' => "deleteIngredient(ingredient)", 'ng-show' => 'editing'} Destroy

      %a{'ng-show' => 'editing', 'ng-click' => "addIngredient()" } New Ingredient

    %tab{heading: "Steps ({{selectedRecipe.steps.length}})"}

      %table.table.table-striped.table-bordered
        %tr
          %th Position
          %th Description
          %th

        %tr{ 'ng-repeat' => "step in selectedRecipe.steps", 'ng-class' => "{strike: step._destroy}" }
          %td
            %span{ 'ng-hide' => 'editing&&!step._destroy' } {{step.position}}
            %input{ 'ng-show' => 'editing&&!step._destroy', 'type' => "text", 'ng-model' => "step.position", 'placeholder' => "Position", 'required' => true }
          %td
            %span{ 'ng-hide' => 'editing&&!step._destroy' } {{step.description}}
            %textarea.textbox{ 'ng-show' => 'editing&&!step._destroy', 'type' => "text", 'ng-model' => "step.description", 'placeholder' => "Description", 'required' => true }
          %td
            %a{ 'ng-click' => "deleteStep(step)", 'ng-show' => 'editing'} Destroy

      %a{ 'ng-show' => 'editing', 'ng-click' => "addStep()"  } New Step

  %span{ 'ng-show' => 'editing' }
    %a.btn.btn-primary{ 'ng-click' => "save()", "ng-disabled" => "!recipeForm.$valid" } Save
    or
    %a{ 'ng-click' => "cancel()" } Cancel

